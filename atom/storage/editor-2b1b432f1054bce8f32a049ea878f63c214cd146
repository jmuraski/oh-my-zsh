{"mode":"editor","version":1,"windowDimensions":{"x":188,"y":122,"width":1024,"height":661,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/a567910/.oh-my-zsh"],"buffers":[{"text":"#compdef cdw\n\n_cdw() {\n  if (( CURRENT == 2 )); then\n    compadd $(command ls -alF ~/app/workspace | grep \"/\")\n  fi\n}\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":9},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/a567910/.oh-my-zsh/completions/_cdw","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"78d06946641dfac0bcec3d698037b381d71a25ed","deserializer":"TextBuffer"},{"text":"## Bazaar integration\n## Just works with the GIT integration just add $(bzr_prompt_info) to the PROMPT\nfunction bzr_prompt_info() {\n\tBZR_CB=`bzr nick 2> /dev/null | grep -v \"ERROR\" | cut -d \":\" -f2 | awk -F / '{print \"bzr::\"$1}'`\n\tif [ -n \"$BZR_CB\" ]; then\n\t\tBZR_DIRTY=\"\"\n\t\t[[ -n `bzr status` ]] && BZR_DIRTY=\" %{$fg[red]%} * %{$fg[green]%}\"\n\t\techo \"$ZSH_THEME_SCM_PROMPT_PREFIX$BZR_CB$BZR_DIRTY$ZSH_THEME_GIT_PROMPT_SUFFIX\"\n\tfi\n}","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":13},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/a567910/.oh-my-zsh/lib/bzr.zsh","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"be356e2454de04a952c5444d675b7df9ca14e164","deserializer":"TextBuffer"},{"text":"# Push and pop directories on directory stack\nalias pu='pushd'\nalias po='popd'\n\n# Basic directory operations\nalias ...='cd ../..'\nalias ....='cd ../../..'\nalias .....='cd ../../../..'\nalias -- -='cd -'\n\n# Super user\nalias _='sudo'\nalias please='sudo'\n\n#alias g='grep -in'\n\n# Show history\nif [ \"$HIST_STAMPS\" = \"mm/dd/yyyy\" ]\nthen\n    alias history='fc -fl 1'\nelif [ \"$HIST_STAMPS\" = \"dd.mm.yyyy\" ]\nthen\n    alias history='fc -El 1'\nelif [ \"$HIST_STAMPS\" = \"yyyy-mm-dd\" ]\nthen\n    alias history='fc -il 1'\nelse\n    alias history='fc -l 1'\nfi\n# List direcory contents\nalias lsa='ls -lah'\nalias ll='ls -alF'\nalias l='ls -lah'\nalias la='ls -lAh'\nalias sl=ls # often screw this up\nalias llg='ls -alF | grep '\n\nalias afind='ack-grep -il'\n\nalias reload=\"source ~/.zshrc\"\nalias editprofile=\"atom ~/.zshrc\"\nalias vimprofile=\"vim ~/.zshrc\"\nalias editalias=\"atom ~/.oh-my-zsh/lib/aliases.zsh\"\nalias vimalias=\"vim ~/.oh-my-zsh/lib/aliases.zsh\"\nalias edithosts=\"atom /private/etc/hosts\"\nalias vimhosts=\"vim /private/etc/hosts\"\nalias listhosts=\"cat /private/etc/hosts\"\nalias editfunctions=\"atom ~/.oh-my-zsh/lib/functions.zsh\"\nalias vimfunctions=\"vim ~/.oh-my-zsh/lib/functions.zsh\"\nalias editdirs=\"atom ~/.oh-my-zsh/lib/directories.zsh\"\nalias vimdirs=\"vim ~/.oh-my-zsh/lib/directories.zsh\"\nalias editssh='atom ~/.ssh/config'\nalias vimssh='vim ~/.ssh/config'\nalias vi='vim'\nalias exip='dig +short myip.opendns.com @resolver1.opendns.com'\nalias inip='ipconfig getifaddr en0'\n\nalias startpostgres='pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start'\nalias stoppostgres='pg_ctl -D /usr/local/var/postgres stop -s -m fast'\nalias startTomcat7='/usr/local/apache-tomcat-7.0.37/bin/startup.sh'\nalias tomcat7Start='/usr/local/apache-tomcat-7.0.37/bin/startup.sh'\nalias shutdownTomcat7='/usr/local/apache-tomcat-7.0.37/bin/shutdown.sh'\nalias tomcat7Shutdown='/usr/local/apache-tomcat-7.0.37/bin/shutdown.sh'\nalias tailTomcat='tail -f /usr/local/apache-tomcat-7.0.37/logs/catalina.out'\n\nalias startmongo='/usr/local/Cellar/mongodb/2.4.9/mongod run --rest'\n# export CC=gcc\n\n# Manta Aliases\nalias start1='~/Documents/Virtual\\ Machines.localized/startUbuntu.sh'\nalias con1=\"ssh jmuraski@192.168.163.100\"\nalias github-bully='open https://github.com/jmuraski/mean_playground_bully'\n\n\n# Remote Insights Aliases\nalias startRedis='redis-server /usr/local/etc/redis.conf'\n\n\n# Fleet Commands\nalias fl='fleetctl '\nalias fld='fleetctl destroy '\nalias flm='fleetctl list-machines'\nalias flst='fleetctl start '\nalias fls='fleetctl start '\nalias flsto='fleetctl stop '\nalias flop='fleetctl stop '\nalias flu='fleetctl list-units'\nalias flub='fleetctl submit '\nalias fluf='fleetctl list-unit-files'\nalias flssh='fleetctl ssh '\nalias flstat='fleetctl status '\nalias flat='fleetctl status '\nalias fload='fleetctl load '\nalias flog='fleetctl journal '\nalias flogs='fleetctl journal -f '\n\n# Best Buy Aliases\n#alias ssh-ca-dev30='ssh -v -i ~/.ssh/keys/ca-ssh-keypair.pem ec2-user@ec2-54-245-110-30.us-west-2.compute.amazonaws.com'\n#alias ssh-ca-dev-tomcat='ssh -v -i ~/.ssh/keys/ca-ssh-keypair.pem ec2-user@ec2-54-245-110-30.us-west-2.compute.amazonaws.com'\n#alias ssh-ca-dev32='ssh -v -i ~/.ssh/keys/ca-ssh-keypair.pem ec2-user@ec2-54-245-110-32.us-west-2.compute.amazonaws.com'\n#alias ssh-ca-dev-apache='ssh -v -i ~/.ssh/keys/ca-ssh-keypair.pem ec2-user@ec2-54-245-110-32.us-west-2.compute.amazonaws.com'\n#alias ssh-ca-uat40='ssh -v -i ~/.ssh/keys/ca-ssh-keypair.pem ec2-user@ec2-54-214-28-40.us-west-2.compute.amazonaws.com'\n#alias ssh-ca-uat-tomcat='ssh -v -i ~/.ssh/keys/ca-ssh-keypair.pem ec2-user@ec2-54-214-28-40.us-west-2.compute.amazonaws.com'\n#alias ssh-ca-uat35='ssh -v -i ~/.ssh/keys/ca-ssh-keypair.pem ec2-user@ec2-54-214-28-35.us-west-2.compute.amazonaws.com'\n#alias ssh-ca-uat-apache='ssh -v -i ~/.ssh/keys/ca-ssh-keypair.pem ec2-user@ec2-54-214-28-35.us-west-2.compute.amazonaws.com'\n#alias ssh-jenkins='ssh -v -i ~/.ssh/keys/jenkins-ssh-keypair.pem ec2-user@54.245.238.194'\n#alias bounceCommerceUi='curl --user admin:admin \"http://localhost:8080/manager/text/reload?path=/commerceui\"'\n#alias github-fe='open https://github.com/bestbuyremix/commerce_anywhere_fe'\n#alias github-rest='open https://github.com/bestbuyremix/commerce_ui'\n#alias github-partner='open https://github.com/bestbuyremix/commerce_anywhere_partner'\n#alias github-sim='open https://github.com/bestbuyremix/commerce_anywhere_sim'\n#alias jira='open \"https://bbyopen.jira.com/secure/RapidBoard.jspa?rapidView=35\"'\n#alias jenkins='open \"http://54.245.238.194/\"'\n#alias artifactory='open \"https://code.bestbuy.com/artifactory/\"'\n\n#Dev Jam Aliases\nalias ssh-devjam-ci='ssh root@192.241.248.176'\nalias ssh-devjam-docker='ssh root@107.170.22.200'\nalias jenkins-devjam='open \"http://192.241.248.176:8090/\"'\nalias github-tcfm='open https://github.com/DevJams/tcf_mobile'\nalias github-tcfs='open https://github.com/DevJams/tcf_simulator'\nalias github-zeoui='open https://github.com/DevJams/zeo_ui'\nalias github-zeos='open https://github.com/DevJams/zeo_server'\nalias ports-devjam=\"ssh root@107.170.22.200 docker ps | grep -o 'app.*' | sed -e 's/\\(app\\/[a-z,A-Z,_,0-9]*\\).*\\(0.0.0.0\\)/\\1 \\2/' | awk '{print \\$1 \\\" - \\\" \\$2}'\"\nalias versionOne='open \"https://www3.v1host.com/partner_DevJam/TeamRoom.mvc/Show/1762\"'\n\n\n#Remote Insights Aliases\nalias github-ri-front='open https://github.com/RemoteInsights/ri_frontend'\nalias github-ri-back='open https://github.com/RemoteInsights/ri_backend'\nalias github-ri-web='open https://github.com/RemoteInsights/webapp'\nalias github-ri-sim='open https://github.com/RemoteInsights/Simulator'\n\nalias sauce-connect=\"/usr/local/Sauce-Connect/open\"\nalias chromeInsecure=\"open -a Google\\ Chrome --args --disable-web-security\"\n\nalias -s log=\"less -MN\"\nalias -s txt=\"less -MN\"\nalias -g G='| grep'\nalias rvmLoad='rvm .rvmrc'\n","markers":{"markers":{"1":{"id":1,"range":[[70,16],[70,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":17},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[{"patches":[{"oldRange":[[70,16],[70,17]],"newRange":[[70,16],[70,24]],"oldText":"c","newText":"jmuraski","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":false,"range":[[70,24],[70,24]]},"newParams":{"tailed":true,"range":[[70,16],[70,24]]},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"properties":{"type":"selection","editorId":17,"goalBufferRange":null}},"newParams":{"properties":{"type":"selection","editorId":17}},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"}],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/a567910/.oh-my-zsh/lib/aliases.zsh","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c7713a181e51ff469fe48f51564e6bf85647afa5","deserializer":"TextBuffer"},{"text":"# fixme - the load process here seems a bit bizarre\n\nunsetopt menu_complete   # do not autoselect the first completion entry\nunsetopt flowcontrol\nsetopt auto_menu         # show completion menu on succesive tab press\nsetopt complete_in_word\nsetopt always_to_end\n\nWORDCHARS=''\n\nzmodload -i zsh/complist\n\n## case-insensitive (all),partial-word and then substring completion\nif [ \"x$CASE_SENSITIVE\" = \"xtrue\" ]; then\n  zstyle ':completion:*' matcher-list 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'\n  unset CASE_SENSITIVE\nelse\n  zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'\nfi\n\nzstyle ':completion:*' list-colors ''\n\n# should this be in keybindings?\nbindkey -M menuselect '^o' accept-and-infer-next-history\n\nzstyle ':completion:*:*:*:*:*' menu select\nzstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'\nif [ \"$OSTYPE[0,7]\" = \"solaris\" ]\nthen\n  zstyle ':completion:*:*:*:*:processes' command \"ps -u $USER -o pid,user,comm\"\nelse\n  zstyle ':completion:*:*:*:*:processes' command \"ps -u $USER -o pid,user,comm -w -w\"\nfi\n\n# disable named-directories autocompletion\nzstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories\ncdpath=(.)\n\n# Use caching so that commands like apt and dpkg complete are useable\nzstyle ':completion::complete:*' use-cache 1\nzstyle ':completion::complete:*' cache-path $ZSH/cache/\n\n# Don't complete uninteresting users\nzstyle ':completion:*:*:*:users' ignored-patterns \\\n        adm amanda apache at avahi avahi-autoipd beaglidx bin cacti canna \\\n        clamav daemon dbus distcache dnsmasq dovecot fax ftp games gdm \\\n        gkrellmd gopher hacluster haldaemon halt hsqldb ident junkbust kdm \\\n        ldap lp mail mailman mailnull man messagebus  mldonkey mysql nagios \\\n        named netdump news nfsnobody nobody nscd ntp nut nx obsrun openvpn \\\n        operator pcap polkitd postfix postgres privoxy pulse pvm quagga radvd \\\n        rpc rpcuser rpm rtkit scard shutdown squid sshd statd svn sync tftp \\\n        usbmux uucp vcsa wwwrun xfs '_*'\n\n# ... unless we really want to.\nzstyle '*' single-ignored show\n\nif [ \"x$COMPLETION_WAITING_DOTS\" = \"xtrue\" ]; then\n  expand-or-complete-with-dots() {\n    echo -n \"\\e[31m......\\e[0m\"\n    zle expand-or-complete\n    zle redisplay\n  }\n  zle -N expand-or-complete-with-dots\n  bindkey \"^I\" expand-or-complete-with-dots\nfi\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":41},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/a567910/.oh-my-zsh/lib/completion.zsh","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"3587ce355da056e3307d1b26af9a5fa37904d39d","deserializer":"TextBuffer"},{"text":"if [[ \"$ENABLE_CORRECTION\" == \"true\" ]]; then\n  alias ebuild='nocorrect ebuild'\n  alias gist='nocorrect gist'\n  alias heroku='nocorrect heroku'\n  alias hpodder='nocorrect hpodder'\n  alias man='nocorrect man'\n  alias mkdir='nocorrect mkdir'\n  alias mv='nocorrect mv'\n  alias mysql='nocorrect mysql'\n  alias sudo='nocorrect sudo'\n\n  setopt correct_all\nfi\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":45},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/a567910/.oh-my-zsh/lib/correction.zsh","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"f335b863a009d0da5020ccb481930d1b5add9398","deserializer":"TextBuffer"},{"text":"# Changing/making/removing directory\nsetopt auto_pushd\nsetopt pushd_ignore_dups\nsetopt pushdminus\n\nalias ..='cd ..'\nalias cd..='cd ..'\nalias cd...='cd ../..'\nalias cd....='cd ../../..'\nalias cd.....='cd ../../../..'\nalias cd/='cd /'\n\nalias 1='cd -'\nalias 2='cd -2'\nalias 3='cd -3'\nalias 4='cd -4'\nalias 5='cd -5'\nalias 6='cd -6'\nalias 7='cd -7'\nalias 8='cd -8'\nalias 9='cd -9'\n\nexport ENV=\"dev\"\nexport MYSQL_HOME=\"/usr/local/mysql\"\nexport WORKSPACE=\"$HOME/apps/workspace\"\nexport MY_SCRIPTS=\"$HOME/.oh-my-zsh/scripts\"\nexport HOMEBREW_HOME=\"/usr/local/Cellar\"\nexport RIAK_HOME=\"$HOMEBREW_HOME/riak/1.2.1-x86_64\"\nexport HBASE_HOME=\"$HOMEBREW_HOME/hbase/0.94.2\"\nexport GRADLE_HOME=\"/usr/local/gradle-1.9\"\nexport GROOVY_HOME=\"/usr/local/groovy-2.2.1\"\nexport HOMEBREW_GITHUB_API_TOKEN=\"735a56b3d43f92cb78445c5fd9f7a76447df891e\"\nexport ANDROID_HOME=\"/Users/jmuraski/Documents/android/adt-bundle-mac-x86_64-20140321/sdk\"\nexport ANDROID_TOOLS=\"$ANDROID_HOME/platform-tools\"\nexport EDITOR='vim'\nexport DOCKER_HOST=tcp://192.168.59.103:2376\nexport DOCKER_CERT_PATH=~/.boot2docker/certs/boot2docker-vm\nexport DOCKER_TLS_VERIFY=1\nexport TCF_EC2='54.69.190.50'\n\nalias startriak=\"$RIAK_HOME/bin/riak start\"\nalias stopriak=\"$RIAK_HOME/bin/riak stop\"\nalias starthbase=\"$HBASE_HOME/bin/start-hbase.sh\"\nalias starthbase=\"$HBASE_HOME/bin/stop-hbase.sh\"\n\nalias llw=\"ll $WORKSPACE\"\nalias cds=\"cd $MY_SCRIPTS\"\nalias lls=\"ll -alF $MY_SCRIPTS\"\nalias sshKeys=\"cd ~/Documents/keys/ssh\"\n\nnotebook(){\n  cd ~/Documents/Notebooks;\n  if [[ \"$1\" == \"save\" ]]; then\n    cd ~/Documents/Notebooks\n    git add .\n    git commit -m 'updating'\n    git push\n  elif [[ \"$1\" == \"load\" ]]; then\n    cd ~/Documents/Notebooks\n    git pull\n  else\n    cd ~/Documents/Notebooks\n  fi\n}\n\ncd () {\n  if   [[ \"x$*\" == \"x...\" ]]; then\n    cd ../..\n  elif [[ \"x$*\" == \"x....\" ]]; then\n    cd ../../..\n  elif [[ \"x$*\" == \"x.....\" ]]; then\n    cd ../../../..\n  elif [[ \"x$*\" == \"x......\" ]]; then\n    cd ../../../../..\n  elif [ -d ~/.autoenv ]; then\n    source ~/.autoenv/activate.sh\n    autoenv_cd \"$@\"\n  else\n    builtin cd \"$@\"\n  fi\n}\n\ncdw(){\n  cd $WORKSPACE/$1;\n}\n\nalias md='mkdir -p'\nalias rd=rmdir\nalias d='dirs -v | head -10'\n\n# mkdir & cd to it\nfunction mcd() {\n  mkdir -p \"$1\" && cd \"$1\";\n}\n","markers":{"markers":{"1":{"id":1,"range":[[24,28],[24,28]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":49,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[24,24],[24,33]]},"newParams":{"tailed":false,"range":[[24,33],[24,33]]},"deserializer":"MarkerPatch"},{"oldRange":[[24,24],[24,33]],"newRange":[[24,24],[24,25]],"oldText":"Documents","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,25],[24,25]],"newRange":[[24,25],[24,26]],"oldText":"","newText":"p","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,26],[24,26]],"newRange":[[24,26],[24,27]],"oldText":"","newText":"p","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,27],[24,27]],"newRange":[[24,27],[24,28]],"oldText":"","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/a567910/.oh-my-zsh/lib/directories.zsh","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"f13affe467ec94186238a74aabd86c13bb808b77","deserializer":"TextBuffer"},{"text":"function zsh_stats() {\n  fc -l 1 | awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] \" \" CMD[a]/count*100 \"% \" a;}' | grep -v \"./\" | column -c3 -s \" \" -t | sort -nr | nl |  head -n20\n}\n\nfunction uninstall_oh_my_zsh() {\n  env ZSH=$ZSH /bin/sh $ZSH/tools/uninstall.sh\n}\n\nfunction upgrade_oh_my_zsh() {\n  env ZSH=$ZSH /bin/sh $ZSH/tools/upgrade.sh\n}\n\nfunction take() {\n  mkdir -p $1\n  cd $1\n}\n\nfunction trash() {\n  local trash_dir=\"${HOME}/.Trash\"\n  local temp_ifs=$IFS\n  IFS=$'\\n'\n  for item in \"$@\"; do\n    if [[ -e \"$item\" ]]; then\n      item_name=\"$(basename $item)\"\n      if [[ -e \"${trash_dir}/${item_name}\" ]]; then\n        mv -f \"$item\" \"${trash_dir}/${item_name} $(date \"+%H-%M-%S\")\"\n      else\n        mv -f \"$item\" \"${trash_dir}/\"\n      fi\n    fi\n  done\n  IFS=$temp_ifs\n}\n\nfunction featureBranch() {\n  echo \"git checkout -b jmuraski/feature/$1\"\n  git checkout -b jmuraski/feature/$1\n  echo \"git push --set-upstream  origin jmuraski/feature/$1\"\n  git push --set-upstream  origin jmuraski/feature/$1\n}\n\nfunction mergeMaster() {\n  CURRENT_BRANCH=$(git branch | grep \"*\" | awk '{ print $2 }')\n  echo \"Current Branch is $CURRENT_BRANCH\"\n  echo \"git checkout master\"\n  git checkout master\n  echo \"git pull\"\n  git pull\n  echo \"git checkout $CURRENT_BRANCH\"\n  git checkout $CURRENT_BRANCH\n  echo \"git merge master\"\n  git merge master\n}\n\nfunction removeBranch(){\n  echo \"git checkout master\"\n  git checkout master\n  echo \"git branch -d jmuraski/feature/$1\"\n  git branch -d jmuraski/feature/$1\n  echo \"git push origin :jmuraski/feature/$1\"\n  git push origin :jmuraski/feature/$1\n}\n#\n# Get the value of an alias.\n#\n# Arguments:\n#    1. alias - The alias to get its value from\n# STDOUT:\n#    The value of alias $1 (if it has one).\n# Return value:\n#    0 if the alias was found,\n#    1 if it does not exist\n#\nfunction alias_value() {\n    alias \"$1\" | sed \"s/^$1='\\(.*\\)'$/\\1/\"\n    test $(alias \"$1\")\n}\n\n#\n# Try to get the value of an alias,\n# otherwise return the input.\n#\n# Arguments:\n#    1. alias - The alias to get its value from\n# STDOUT:\n#    The value of alias $1, or $1 if there is no alias $1.\n# Return value:\n#    Always 0\n#\nfunction try_alias_value() {\n    alias_value \"$1\" || echo \"$1\"\n}\n\n#\n# Set variable \"$1\" to default value \"$2\" if \"$1\" is not yet defined.\n#\n# Arguments:\n#    1. name - The variable to set\n#    2. val  - The default value\n# Return value:\n#    0 if the variable exists, 3 if it was set\n#\nfunction default() {\n    test `typeset +m \"$1\"` && return 0\n    typeset -g \"$1\"=\"$2\"   && return 3\n}\n\n#\n# Set enviroment variable \"$1\" to default value \"$2\" if \"$1\" is not yet defined.\n#\n# Arguments:\n#    1. name - The env variable to set\n#    2. val  - The default value\n# Return value:\n#    0 if the env variable exists, 3 if it was set\n#\nfunction env_default() {\n    env | grep -q \"^$1=\" && return 0\n    export \"$1=$2\"       && return 3\n}\n\nfunction switchJava() {\nexport JAVA_HOME=$(/usr/libexec/java_home -v $1)\n}\n\nfunction fleet_tunnel_tcf(){\n  export FLEETCTL_TUNNEL=$TCF_EC2\n}\n","markers":{"markers":{"1":{"id":1,"range":[[35,9],[35,9]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":53,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/a567910/.oh-my-zsh/lib/functions.zsh","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"fa3025f016c31b0bff23a334a3e186bab2dc2d3a","deserializer":"TextBuffer"},{"text":"# Path to your oh-my-zsh configuration.\nZSH=$HOME/.oh-my-zsh\n\n# Set name of the theme to load.\n# Look in ~/.oh-my-zsh/themes/\n# Optionally, if you set this to \"random\", it'll load a random theme each\n# time that oh-my-zsh is loaded.\nZSH_THEME=\"jmuraski\"\n\n# Example aliases\n# alias zshconfig=\"subl ~/.zshrc\"\n# alias ohmyzsh=\"subl ~/.oh-my-zsh\"\n\n# Set to this to use case-sensitive completion\n# CASE_SENSITIVE=\"true\"\n\n# Comment this out to disable weekly auto-update checks\n# DISABLE_AUTO_UPDATE=\"true\"\n\n# Uncomment following line if you want to disable colors in ls\n# DISABLE_LS_COLORS=\"true\"\n\n# Uncomment following line if you want to disable autosetting terminal title.\n# DISABLE_AUTO_TITLE=\"true\"\n\n# Uncomment following line if you want red dots to be displayed while waiting for completion\n# COMPLETION_WAITING_DOTS=\"true\"\n\n# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\n# Example format: plugins=(rails git textmate ruby lighthouse)\nplugins=(git git-flow coffee bower brew node npm rvm svn history mvn, docker, grails, tmux, tmuxinator)\n\nsource $ZSH/oh-my-zsh.sh\n\n# RVM line\n#[[ -s \"$HOME/.rvm/scripts/rvm\" ]] && . \"$HOME/.rvm/scripts/rvm\"\n\n# Customize to your needs...\nexport PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/usr/local/sbin:/sbin:/usr/X11/bin:$MY_SCRIPTS\nexport PATH=$PATH:/usr/local/share/npm/bin\nexport PATH=$PATH:/Applications/kdiff3.app/Contents/MacOS\nexport PATH=$PATH:/usr/local/opt/ruby/bin\nexport PATH=$PATH:$GRADLE_HOME/bin\nexport PATH=$PATH:$ANDROID_HOME/tools\nexport PATH=$PATH:$ANDROID_TOOLS\n\n### Added by the Heroku Toolbelt\nexport PATH=\"/usr/local/heroku/bin:$PATH\"\n\n#THIS MUST BE AT THE END OF THE FILE FOR GVM TO WORK!!!\n[[ -s \"$HOME/.gvm/bin/gvm-init.sh\" ]] && source \"$HOME/.gvm/bin/gvm-init.sh\"\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":57},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/a567910/.zshrc","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"887c7677707af8f0b551f95c3fe21651ca98e8ee","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":6,"items":[{"id":9,"softTabs":true,"displayBuffer":{"id":10,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/a567910/.oh-my-zsh/completions/_cdw","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":13,"softTabs":false,"displayBuffer":{"id":14,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/a567910/.oh-my-zsh/lib/bzr.zsh","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":17,"softTabs":true,"displayBuffer":{"id":18,"softWrapped":false,"editorWidthInChars":null,"scrollTop":2369,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/a567910/.oh-my-zsh/lib/aliases.zsh","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":41,"softTabs":true,"displayBuffer":{"id":42,"softWrapped":false,"editorWidthInChars":null,"scrollTop":869,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/a567910/.oh-my-zsh/lib/completion.zsh","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":45,"softTabs":true,"displayBuffer":{"id":46,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/a567910/.oh-my-zsh/lib/correction.zsh","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":49,"softTabs":true,"displayBuffer":{"id":50,"softWrapped":false,"editorWidthInChars":null,"scrollTop":287,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/a567910/.oh-my-zsh/lib/directories.zsh","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":53,"softTabs":true,"displayBuffer":{"id":54,"softWrapped":false,"editorWidthInChars":null,"scrollTop":477,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/a567910/.oh-my-zsh/lib/functions.zsh","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":57,"softTabs":true,"displayBuffer":{"id":58,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/a567910/.zshrc","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/a567910/.oh-my-zsh/lib/directories.zsh","focused":true,"deserializer":"Pane"},"activePaneId":6,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-shellscript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/a567910/.oh-my-zsh/completions/_cdw":1425402050815,"/Users/a567910/.oh-my-zsh/lib/bzr.zsh":1425402217346,"/Users/a567910/.oh-my-zsh/lib/aliases.zsh":1425402202388,"/Users/a567910/.oh-my-zsh/lib/completion.zsh":1425402219644,"/Users/a567910/.oh-my-zsh/lib/correction.zsh":1425402222886,"/Users/a567910/.oh-my-zsh/lib/directories.zsh":1425402223615,"/Users/a567910/.oh-my-zsh/lib/functions.zsh":1425402193628,"/Users/a567910/.zshrc":1425402185459},"metrics":{"sessionLength":4843021},"tree-view":{"directoryExpansionStates":[{"completions":{},"lib":{}}],"selectedPath":"/Users/a567910/.oh-my-zsh/lib/directories.zsh","hasFocus":false,"attached":true,"scrollLeft":9,"scrollTop":120,"width":200},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["jmuraski"],"replaceHistory":[],"pathsHistory":[]}}}